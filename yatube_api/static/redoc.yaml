openapi: 3.0.2
info:
  title: Документация к API проекта Kittygram
  version: v1
paths:
  /v1/posts/:
    get:
      operationId: Получение списка постов
      description: Получить список всех постов.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: Удачное выполнение запроса
      tags:
        - api
    post:
      operationId: Создание поста
      description: Добавление нового поста в коллекцию. Анонимные запросы запрещены.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Удачное выполнение запроса
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Учетные данные не были предоставлены.
          description: Запрос от имени анонимного пользователя
      tags:
        - api
  '/v1/posts/{id}/':
    get:
      operationId: Получение поста
      description: Получение информации о посте по id.
      parameters:
        - name: id
          in: path
          required: true
          description: id поста
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Удачное выполнение запроса
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Страница не найдена.
          description: Попытка запроса несуществующего поста
      tags:
        - api
    put:
      operationId: Обновление поста
      description: Обновление информации о посте по id. Обновить может только автор поста.
      parameters:
        - name: id
          in: path
          required: true
          description: id поста
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Удачное выполнение запроса
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Учетные данные не были предоставлены.
          description: Запрос от имени анонимного пользователя
        '403':
          content:
            application/json:
              examples:
                '403':
                  value:
                    detail: У вас недостаточно прав для выполнения данного действия.
          description: Попытка изменения чужого контента
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Страница не найдена.
          description: Попытка изменения несуществующего поста
      tags:
        - api
    patch:
      operationId: Частичное обновление поста
      description: Частичное обновление информации о посте по id. Обновить может только автор поста.
      parameters:
        - name: id
          in: path
          required: true
          description: id поста
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: Удачное выполнение запроса
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Учетные данные не были предоставлены.
          description: Запрос от имени анонимного пользователя
        '403':
          content:
            application/json:
              examples:
                '403':
                  value:
                    detail: У вас недостаточно прав для выполнения данного действия.
          description: Попытка изменения чужого контента
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Страница не найдена.
          description: Попытка изменения несуществующего поста
      tags:
        - api
    delete:
      operationId: Удаление поста
      description: Удаление поста по id. Удалить может только автор поста.
      parameters:
        - name: id
          in: path
          required: true
          description: id поста
          schema:
            type: integer
      responses:
        '204':
          description: Удачное выполнение запроса
        '401':
          content:
            application/json:
              examples:
                '401':
                  value:
                    detail: Учетные данные не были предоставлены.
          description: Запрос от имени анонимного пользователя
        '403':
          content:
            application/json:
              examples:
                '403':
                  value:
                    detail: У вас недостаточно прав для выполнения данного действия.
          description: Попытка удаления чужого контента
        '404':
          content:
            application/json:
              examples:
                '404':
                  value:
                    detail: Страница не найдена.
          description: Попытка удаления несуществующего поста
      tags:
        - api
  # Аналогично добавляются маршруты для GroupViewSet, FollowViewSet и CommentViewSet
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: string
          readOnly: true
        text:
          type: string
        pub_date:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        group:
          type: integer
          nullable: true
      required:
        - text
    PostCreate:
      type: object
      properties:
        text:
          type: string
        image:
          type: string
          format: binary
          nullable: true
        group:
          type: integer
          nullable: true
      required:
        - text
    PostUpdate:
      type: object
      properties:
        text:
          type: string
        image:
          type: string
          format: binary
          nullable: true
        group:
          type: integer
          nullable: true